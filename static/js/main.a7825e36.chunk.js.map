{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Input","props","state","eHitRate","pHitRate","eHit","pHit","handleChange","bind","handleSubmit","React","createRef","event","preventDefault","this","onSubmit","current","focus","select","checked","target","value","type","name","setState","onChange","tabIndex","ref","Component","DataRow","totalBox","hitBox","edit","data","rate","number","precision","shift","reverseShift","numArray","split","Math","round","Data","hitData","filter","Boolean","hitData2","forEach","contents","rateList","map","key","className","App","stored","localStorage","getItem","JSON","parse","pHitData","eHitData","history","historyIndex","oldData","dataSet","slice","console","log","inputState","newData","addDataSet","setItem","stringify","concat","length","input","removeDataSet","confirmAlert","title","message","buttons","label","onClick","removeItem","window","location","reload","handleInputSubmit","disabled","onUndoClicked","onRedoClicked","onResetClicked","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a7825e36.chunk.js","sourcesContent":["import React from 'react';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\nimport './App.css';\n\n\nclass Input extends React.Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n          eHitRate : 0,\n          pHitRate : 0,\n          eHit : false,\n          pHit : false,\n      }\n      this.handleChange = this.handleChange.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n      this.eHitRate = React.createRef();\n      this.eHit = React.createRef();\n      this.pHit = React.createRef();\n  }\n\n  handleSubmit(event) {\n      event.preventDefault();\n      this.props.onSubmit(this.state);\n      this.eHitRate.current.focus();\n      this.eHitRate.current.select();\n      this.pHit.current.checked = false;\n      this.eHit.current.checked = false;\n  }\n\n  handleChange(event) {\n      const target = event.target;\n      const value = target.type === 'checkbox' ? target.checked : target.value;\n      const name = target.name;\n      \n      this.setState({\n        [name]: value\n      });\n  }\n\n  render() {\n      return (\n          <form onSubmit={this.handleSubmit}>\n              <label>\n                  敵命中率：<input name=\"eHitRate\" type=\"number\" value={this.state.eHitRate} onChange={this.handleChange} tabIndex=\"2\" ref={this.eHitRate}/>\n              </label>\n              <br />\n              <label>\n                  味命中率：<input name=\"pHitRate\" type=\"number\" value={this.state.pHitRate} onChange={this.handleChange} tabIndex=\"3\"/>\n              </label>\n              <br />\n              <label>\n                  敵命中：<input name=\"eHit\" type=\"checkbox\" value={this.state.eHit} onChange={this.handleChange} tabIndex=\"4\" ref={this.eHit}/>\n              </label>\n              <br />\n              <label>\n                  味命中：<input name=\"pHit\" type=\"checkbox\" value={this.state.pHit} onChange={this.handleChange} tabIndex=\"5\" ref={this.pHit}/>\n              </label>\n              <br />\n              <input type=\"submit\" value=\"NEXT\" tabIndex=\"6\"/>\n              <input type=\"hidden\" tabIndex=\"7\" />\n          </form>\n      )\n  }\n}\n\nclass DataRow extends React.Component {\n  /* props: rate, data, edit */\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    let totalBox;\n    let hitBox;\n    if (this.props.edit) {\n      totalBox = <input name=\"total\" type=\"number\" value={this.props.data[1]} onChange={this.handleChange} />;\n      hitBox = <input name=\"hit\" type=\"number\" value={this.props.data[0]} onChange={this.handleChange} />;\n    } else {\n      totalBox = this.props.data[1];\n      hitBox = this.props.data[0];\n    }\n    return <div>{this.props.rate}%:{hitBox}/{totalBox} ({round(hitBox/(totalBox === 0 ? 1 : totalBox) * 100, 1)}%)</div>\n  }\n\n}\n\nclass Data extends React.Component {\n  render() {\n    const data = this.props.hitData.filter(Boolean);\n    if (this.props.hitData2) {\n      this.props.hitData2.filter(Boolean).forEach((contents, rate) =>{\n        if (data[rate]) {\n          data[rate][0] += contents[0];\n          data[rate][1] += contents[1];\n        } else {\n          data[rate] = contents;\n        }\n      })\n    }\n    let rateList = data.map((contents, rate) => {\n      return <li key={rate}>\n          <DataRow data={contents} rate={rate} edit={false}/>\n        </li>\n    })\n    return <ul className=\"dataList\">\n      {rateList}\n    </ul>\n  }\n}\n\nclass App extends React.Component {\n  /** state format: pHitData[RATE] = [HIT COUNT, TOTAL COUNT] */\n  constructor(props) {\n      super(props);\n      let stored = localStorage.getItem(\"ddstats\");\n      let data;\n      if (stored) {\n        data = JSON.parse(stored);\n      } else {\n        data = {\n          pHitData : [],\n          eHitData : []\n        }\n      }\n      this.state = {\n        data: data,\n        history: [],\n        historyIndex: 0\n      }\n  }\n\n  addDataSet(oldData, dataSet) {\n    const pHitData = oldData.pHitData.slice();\n    const eHitData = oldData.eHitData.slice();\n    if (eHitData[dataSet.eHitRate]) {\n      const data = eHitData[dataSet.eHitRate];\n      data[1] = data[1] + 1;\n      data[0] = data[0] + dataSet.eHit ? 1 : 0;\n      eHitData[dataSet.eHitRate] = data;\n    } else {\n      eHitData[dataSet.eHitRate] = [dataSet.eHit ? 1 : 0,1];\n    }\n    \n    if (pHitData[dataSet.pHitRate]) {\n      const data = pHitData[dataSet.pHitRate];\n      data[1] = data[1] + 1;\n      data[0] = data[0] + dataSet.pHit ? 1 : 0;\n      pHitData[dataSet.pHitRate] = data;\n    } else {\n      pHitData[dataSet.pHitRate] = [dataSet.pHit ? 1 : 0, 1];\n    }\n    return {pHitData: pHitData, eHitData: eHitData};\n  }\n\n  removeDataSet(oldData, dataSet) {\n    const pHitData = oldData.pHitData.slice();\n    const eHitData = oldData.eHitData.slice();\n    if (eHitData[dataSet.eHitRate]) {\n      const data = eHitData[dataSet.eHitRate];\n      data[1] = data[1] - 1;\n      data[0] = data[0] - dataSet.eHit ? 1 : 0;\n      eHitData[dataSet.eHitRate] = data;\n    } else {\n      console.log(\"Something is not correct, as you are trying to undoing non-existing information\");\n    }\n    if (pHitData[dataSet.pHitRate]) {\n      const data = pHitData[dataSet.pHitRate];\n      data[1] = data[1] - 1;\n      data[0] = data[0] - dataSet.pHit ? 1 : 0;\n      pHitData[dataSet.pHitRate] = data;\n    } else {\n      console.log(\"Something is not correct, as you are trying to undoing non-existing information\");\n    }\n    return {pHitData: pHitData, eHitData: eHitData};\n  }\n\n  handleInputSubmit(inputState) {\n    const history = this.state.history.slice(0, this.state.historyIndex);\n    const oldData = this.state.data;\n    const newData = this.addDataSet(oldData, inputState);\n    localStorage.setItem(\"ddstats\", JSON.stringify(newData));\n    this.setState({\n      data: newData,\n      history: history.concat(inputState),\n      historyIndex: history.length+1\n    });\n  }\n\n  onUndoClicked() {\n    const input = this.state.history[this.state.historyIndex-1];\n    const oldData = this.state.data;\n    const newData = this.removeDataSet(oldData, input);\n    localStorage.setItem(\"ddstats\", JSON.stringify(newData));\n    this.setState({\n      data: newData,\n      historyIndex: this.state.historyIndex-1\n    })\n  }\n\n  onRedoClicked() {\n    const input = this.state.history[this.state.historyIndex];\n    const oldData = this.state.data;\n    const newData = this.addDataSet(oldData, input);\n    localStorage.setItem(\"ddstats\", JSON.stringify(newData));\n    this.setState({\n      data: newData,\n      historyIndex: this.state.historyIndex+1\n    })\n  }\n\n  onResetClicked() {\n    confirmAlert({\n      title: \"本当にリセットしますか？\",\n      message: \"保存されたデータも削除されるため、データリセットすると取り消しができません。\",\n      buttons: [\n        {\n          label: 'リセットする',\n          onClick: () => {localStorage.removeItem(\"ddstats\");window.location.reload()}\n        },\n        {\n          label: 'リセットしない'\n        }\n      ]\n    })\n  }\n\n  render() {\n      return <div className=\"rootcontainer\">\n        <div>\n          <Input onSubmit={(state) => this.handleInputSubmit(state)}/>\n          <div>\n            <button tabIndex=\"-1\" disabled={this.state.historyIndex === 0} onClick={() => this.onUndoClicked()}>取り消し</button>\n            <button tabIndex=\"-1\" disabled={this.state.historyIndex === this.state.history.length} onClick={() => this.onRedoClicked()}>やり直す</button>\n            <button tabIndex=\"-1\" onClick={() => this.onResetClicked()}>データリセット</button>\n          </div>\n        </div>\n        <div className=\"data\">\n          <div className=\"dataContainer\">味方命中統計<Data hitData={this.state.data.pHitData}/></div>\n          <div className=\"dataContainer\">敵側命中統計<Data hitData={this.state.data.eHitData}/></div>\n          <div className=\"dataContainer\">合計命中統計<Data hitData={this.state.data.pHitData} hitData2={this.state.data.eHitData}/></div>\n        </div>\n      </div>\n  }\n}\n\nfunction round(number, precision) {\n  var shift = function (number, precision, reverseShift) {\n    if (reverseShift) {\n      precision = -precision;\n    }  \n    var numArray = (\"\" + number).split(\"e\");\n    return +(numArray[0] + \"e\" + (numArray[1] ? (+numArray[1] + precision) : precision));\n  };\n  return shift(Math.round(shift(number, precision, false)), precision, true);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}